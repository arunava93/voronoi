# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  VoroLib_config = debug
  VoroExe_config = debug
  VoroGen_config = debug

else ifeq ($(config),release)
  VoroLib_config = release
  VoroExe_config = release
  VoroGen_config = release

else ifeq ($(config),windows)
  VoroLib_config = windows
  VoroExe_config = windows
  VoroGen_config = windows

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := VoroLib VoroExe VoroGen

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

VoroLib:
ifneq (,$(VoroLib_config))
	@echo "==== Building VoroLib ($(VoroLib_config)) ===="
	@${MAKE} --no-print-directory -C . -f VoroLib.make config=$(VoroLib_config)
endif

VoroExe: VoroLib
ifneq (,$(VoroExe_config))
	@echo "==== Building VoroExe ($(VoroExe_config)) ===="
	@${MAKE} --no-print-directory -C . -f VoroExe.make config=$(VoroExe_config)
endif

VoroGen: VoroLib
ifneq (,$(VoroGen_config))
	@echo "==== Building VoroGen ($(VoroGen_config)) ===="
	@${MAKE} --no-print-directory -C . -f VoroGen.make config=$(VoroGen_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f VoroLib.make clean
	@${MAKE} --no-print-directory -C . -f VoroExe.make clean
	@${MAKE} --no-print-directory -C . -f VoroGen.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  windows"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   VoroLib"
	@echo "   VoroExe"
	@echo "   VoroGen"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"